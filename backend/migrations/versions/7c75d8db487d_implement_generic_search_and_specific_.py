"""Implement generic search and specific search methods

Revision ID: 7c75d8db487d
Revises: 6763b4772dc5
Create Date: 2025-01-13 16:55:31.970244

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Enum


# revision identifiers, used by Alembic.
revision: str = '7c75d8db487d'
down_revision: Union[str, None] = '6763b4772dc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First create the Enum type
    doctorstatus = Enum('PENDING', 'APPROVED', 'REJECTED', name='doctorstatus', create_type=True)
    doctorstatus.create(op.get_bind(), checkfirst=True)
    
    # Then add the column using the created Enum type
    # Since this is a new column, we'll set a default value
    op.add_column('doctors', sa.Column('status', doctorstatus, server_default='PENDING', nullable=False))
    
    op.drop_constraint('uq_doctors_doctor_username', 'doctors', type_='unique')
    op.drop_constraint('fk_doctors_doctor_username_users_username', 'doctors', type_='foreignkey')
    op.drop_column('doctors', 'doctor_username')
    op.execute('ALTER TABLE users ALTER COLUMN dob TYPE date USING dob::date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'dob',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(length=40),
               existing_nullable=False)
    op.add_column('doctors', sa.Column('doctor_username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key('fk_doctors_doctor_username_users_username', 'doctors', 'users', ['doctor_username'], ['username'], ondelete='CASCADE')
    op.create_unique_constraint('uq_doctors_doctor_username', 'doctors', ['doctor_username'])
    
    # Drop the column first
    op.drop_column('doctors', 'status')
    
    # Then drop the Enum type
    doctorstatus = Enum('PENDING', 'APPROVED', 'REJECTED', name='doctorstatus')
    doctorstatus.drop(op.get_bind())
    # ### end Alembic commands ###